version: '3.4'

services:
  accountwebapi:
    image: ${DOCKER_REGISTRY-}accountwebapi
    container_name: 'accounts'
    build:
      context: .
      dockerfile: AccountWebApi/Dockerfile      
    networks:
        - rabbitmq_net
        - default
        - account_data
    depends_on:
        - "accountdb"

  accountdb:
    image: postgres:14.4
    container_name: 'accountdb'
    networks: 
        - account_data
  
  productswebapi:
    image: ${DOCKER_REGISTRY-}productswebapi
    container_name: 'products'
    build:
        context: .
        dockerfile: ProductsWebApi/Dockerfile
    networks:
        - rabbitmq_net
        - default
        - products_data
        - graylog
    depends_on:
        - "productsdb"
        - "logs_graylog"

  productsdb:
    image: postgres:14.4
    container_name: 'productsdb'
    networks: 
        - products_data        

  authwebapi:
    image: ${DOCKER_REGISTRY-}authwebapi
    container_name: 'auth'
    build:
        context: .
        dockerfile: AuthWebApi/Dockerfile
    networks:
        - default
        - auth_data
    depends_on:
        - "authdb"

  authdb:
    image: postgres:14.4
    container_name: 'authdb'
    networks: 
        - auth_data
  
  healthwebapi:
    image: ${DOCKER_REGISTRY-}healthwebapi
    container_name: 'health'
    build:
        context: .
        dockerfile: HealthWebApi/Dockerfile
    networks:
        - default
        - rabbitmq_net

  gatewaywebapi:
    image: ${DOCKER_REGISTRY-}gatewaywebapi
    container_name: 'gateway'
    ports:
        - 80:80
        - 443:443
    build:
        context: .
        dockerfile: GatewayWebApi/Dockerfile
    networks:
        - default

  rabbitmq:
    image: rabbitmq:3.10
    container_name: 'rabbitmq'
    ports:
        - "5672"
        - "15672"
    volumes:
        - ~/.docker-conf/rabbuitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - rabbitmq_net

  logs_mongodb:
    container_name: mongo_graylog
    image: mongo:3
    volumes:
        - ~/logs/graylog/mongodb:/data/db
    networks:
        - graylog_inner
  logs_elasticsearch:
    container_name: elasticgraylog
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    volumes: 
        - ~/logs/graylog/elasticsearchdata:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - cluster.routing.allocation.disk.watermark.flood_stage=1gb
      - cluster.routing.allocation.disk.watermark.low=3gb
      - cluster.routing.allocation.disk.watermark.high=2gb
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
        resources:
          limits:
            memory: 1g
    networks:
        - graylog_inner
  logs_graylog:
    image: graylog/graylog:4.3
    container_name: graylog
    environment:
      # CHANGE ME (must be at least 16 characters)!
        - GRAYLOG_PASSWORD_SECRET=ytte222eu2eu2ue2ueueeueueue
        # Password: admin
        - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
        - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
        - GRAYLOG_MONGODB_URI=mongodb://mongo_graylog:27017/graylog
        - GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticgraylog:9200
    restart: always
    entrypoint: /usr/bin/tini -- wait-for-it elasticgraylog:9200 --  /docker-entrypoint.sh
    depends_on:
        - logs_mongodb
        - logs_elasticsearch
    networks:
        - graylog_inner
        - graylog
    ports:
        - 9000:9000
        # Syslog TCP
        #- 1514:1514
        # Syslog UDP
        #- 1514:1514/udp
        # GELF TCP
        #- 12201:12201
        # GELF UDP
        #- 12201:12201/udp

networks:
    rabbitmq_net:
        driver: bridge
    default:
        driver: bridge
    account_data:
        driver: bridge
    auth_data:
        driver: bridge
    products_data:
        driver: bridge
    graylog_inner:
        driver: bridge
    graylog:
        driver: bridge
        

    